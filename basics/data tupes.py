'===================переменные======================='
"переменные это ссылки на ячейку памяти, где хранятся какие-то данные. Для дальнейшего импользование"

name = 'Tima' 
age = 25

num1 = 15
num2 = 20
print(num1 + num2)
print('hello world')

'=============правила наименование переменных=========='

a = 'tima' # можно, но назначение не понятно
# 11num = 12 - нельзя начинать переменные с чисел
# num-df = 13 - нельзя использовать символы кроме '_'
# hello world = 'hello world' - нельзя использовать пробелы в названии переменной
# print = 'print' - нельзя называть переменные встроенными словами из питона


# snake case - python стиль наименование
my_name = 'katana'  

#Camel case - стиль остальных языков программирования
MyName = 'kstsna'

'==============ввод и вывод данных================='

# print() - функция для вывода данных в терминал
# input() - функция для ввода двнных с терминала

print('makers')

name = input('введите ваше имя: ')

print(name)

'=================типы данных=================='
#типы данных деляться на две вида: Изменяемые и неизменяемые

#изменяемые типы данных:
list_ = [1,2,3,'makers', True]
dict_ = {'a':1, 'b' :12, 'c':0}
set_ = {1, 2, 13, 10, True}

#неизменяемые типы данных:
int_ = 15
float_ = 0.5
complex_ = 5j
decimal_ = 0.5012030123
str_ = 'makers bootcamp'
tuple_ = (1, 2, 123, 0, -5)
boolean_1 = True
boolean_2 = False
nane_type = None

num1 = 10 
num1 = 5

print(num1 + num2) #сложение = 15
print(num1 - num2) #вычитание = 5
print(num1 * num2) #умножение = 50
print(num1 / num2) #дробное деление = 2.0
print(num1 // num2) #целочисленно деление = 2 
print(num1 % num2) #деление по остатку = 0
print(num1 ** num2) #возведение в степень = 100000
print(num1 ** 0.5) #корень числа
from math import sqrt
print(sqrt(num1)) #корень числа
print(abs(-num1)) # |-10| -> 10 модуль числа
print(round(5.6)) # 6 (округление в большу сторону)
print(round(5.4)) # 5 
print(round(5.49)) # 5 (округление идёт только по первой цифре после точки)
print(pow(2, 3)) # 2 ** 3 = 8
print(pow(2, 3, 4)) # (2 ** 3) % 4 = 0 
print(divmod(5, 2)) # 2,1 | (5 // 2) % 2 
#divmod - функсия, которая возвращает 2 числа: 1 чило это - целочисленное деление 
#                                              2 число это - деление по остатку

divmod  (17, 3) #1 дейстие 17 // 3 = 5
#                2 дейстие 17 % 3 = 2

